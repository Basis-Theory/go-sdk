// This file was auto-generated by Fern from our API Definition.

package basistheory

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/Basis-Theory/go-sdk/core"
)

type CreateApplicationRequest struct {
	Name        string        `json:"name" url:"-"`
	Type        string        `json:"type" url:"-"`
	ExpiresAt   *string       `json:"expires_at,omitempty" url:"-"`
	Permissions []string      `json:"permissions,omitempty" url:"-"`
	Rules       []*AccessRule `json:"rules,omitempty" url:"-"`
	CreateKey   *bool         `json:"create_key,omitempty" url:"-"`
}

type ApplicationsListRequest struct {
	ID    []*string `json:"-" url:"id,omitempty"`
	Type  []*string `json:"-" url:"type,omitempty"`
	Page  *int      `json:"-" url:"page,omitempty"`
	Start *string   `json:"-" url:"start,omitempty"`
	Size  *int      `json:"-" url:"size,omitempty"`
}

type ApplicationPaginatedList struct {
	Pagination *Pagination    `json:"pagination,omitempty" url:"pagination,omitempty"`
	Data       []*Application `json:"data,omitempty" url:"data,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (a *ApplicationPaginatedList) GetExtraProperties() map[string]interface{} {
	return a.extraProperties
}

func (a *ApplicationPaginatedList) UnmarshalJSON(data []byte) error {
	type unmarshaler ApplicationPaginatedList
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*a = ApplicationPaginatedList(value)

	extraProperties, err := core.ExtractExtraProperties(data, *a)
	if err != nil {
		return err
	}
	a.extraProperties = extraProperties

	a._rawJSON = json.RawMessage(data)
	return nil
}

func (a *ApplicationPaginatedList) String() string {
	if len(a._rawJSON) > 0 {
		if value, err := core.StringifyJSON(a._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(a); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", a)
}

type UpdateApplicationRequest struct {
	Name        string        `json:"name" url:"-"`
	Permissions []string      `json:"permissions,omitempty" url:"-"`
	Rules       []*AccessRule `json:"rules,omitempty" url:"-"`
}
