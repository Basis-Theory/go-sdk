// Code generated by Fern. DO NOT EDIT.

package client

import (
	jobs "github.com/Basis-Theory/go-sdk/v2/accountupdater/jobs"
	realtime "github.com/Basis-Theory/go-sdk/v2/accountupdater/realtime"
	core "github.com/Basis-Theory/go-sdk/v2/core"
	internal "github.com/Basis-Theory/go-sdk/v2/internal"
	option "github.com/Basis-Theory/go-sdk/v2/option"
	http "net/http"
	os "os"
)

type Client struct {
	Jobs     *jobs.Client
	RealTime *realtime.Client

	baseURL string
	caller  *internal.Caller
	header  http.Header
}

func NewClient(opts ...option.RequestOption) *Client {
	options := core.NewRequestOptions(opts...)
	if options.APIKey == "" {
		options.APIKey = os.Getenv("BT-API-KEY")
	}
	return &Client{
		Jobs:     jobs.NewClient(opts...),
		RealTime: realtime.NewClient(opts...),
		baseURL:  options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
		header: options.ToHeader(),
	}
}
