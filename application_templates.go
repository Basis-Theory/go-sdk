// This file was auto-generated by Fern from our API Definition.

package basistheory

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/Basis-Theory/go-sdk/core"
)

type ApplicationTemplate struct {
	ID              *string       `json:"id,omitempty" url:"id,omitempty"`
	Name            *string       `json:"name,omitempty" url:"name,omitempty"`
	Description     *string       `json:"description,omitempty" url:"description,omitempty"`
	ApplicationType *string       `json:"application_type,omitempty" url:"application_type,omitempty"`
	TemplateType    *string       `json:"template_type,omitempty" url:"template_type,omitempty"`
	IsStarter       *bool         `json:"is_starter,omitempty" url:"is_starter,omitempty"`
	Rules           []*AccessRule `json:"rules,omitempty" url:"rules,omitempty"`
	Permissions     []string      `json:"permissions,omitempty" url:"permissions,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (a *ApplicationTemplate) GetExtraProperties() map[string]interface{} {
	return a.extraProperties
}

func (a *ApplicationTemplate) UnmarshalJSON(data []byte) error {
	type unmarshaler ApplicationTemplate
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*a = ApplicationTemplate(value)

	extraProperties, err := core.ExtractExtraProperties(data, *a)
	if err != nil {
		return err
	}
	a.extraProperties = extraProperties

	a._rawJSON = json.RawMessage(data)
	return nil
}

func (a *ApplicationTemplate) String() string {
	if len(a._rawJSON) > 0 {
		if value, err := core.StringifyJSON(a._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(a); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", a)
}
